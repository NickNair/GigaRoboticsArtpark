TrajectoryPlannerROS:
  max_vel_x: .5
  min_vel_x: -.5
  max_vel_theta: .8
  min_vel_theta: -.8
  min_in_place_vel_theta: 1.2
  escape_vel: -.2
  acc_lim_theta: 2
  acc_lim_x: 5
  acc_lim_y: 5
  holonomic_robot: true

  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and  path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale: .03 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  path_distance_bias: .6 #The weighting for how much the controller should stay close to the path it was given . default 0.6
  goal_distance_bias: .8 # Adjust for sharp turn #The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8
  heading_lookahead: .2 #Adjust to take care of room exit  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: true #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: .4 #Adjust to control jitter   #How far to look ahead in time in seconds along the simulated trajectory when using   heading scoring
  dwa: false #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.1 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.2
  escape_reset_theta: 0.2
  # 
  yaw_goal_tolerance: .1
  xy_goal_tolerance: .2
  latch_xy_goal_tolerance: false
  # 
  sim_time: 1
  sim_granularity: .025
  vx_samples: 3
  vtheta_samples: 20


